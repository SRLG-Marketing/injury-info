AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Legal Injury Information Platform - AWS Serverless Deployment

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Environment:
      Variables:
        NODE_ENV: production
    MemorySize: 1024

Resources:
  # Main API Function
  LegalInfoAPI:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: server.handler
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAIApiKey
          HUBSPOT_ACCESS_TOKEN: !Ref HubSpotAccessToken
          HUBSPOT_PORTAL_ID: !Ref HubSpotPortalId
          GOOGLE_API_KEY: !Ref GoogleApiKey
          GOOGLE_SPREADSHEET_ID: !Ref GoogleSpreadsheetId
      ReservedConcurrencyLimit: 100
      Tags:
        - Key: Project
          Value: LegalPlatform
        - Key: Environment
          Value: Production

  # Cache Table for performance
  CacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: legal-info-cache
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: cacheKey
          AttributeType: S
      KeySchema:
        - AttributeName: cacheKey
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Project
          Value: LegalPlatform

  # API Gateway with caching
  LegalInfoApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        AllowOrigin: "'*'"
      CacheClusterEnabled: true
      CacheClusterSize: 0.5
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          CachingEnabled: true
          CacheTtlInSeconds: 300

  # CloudFront Distribution for global CDN
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: ApiGateway
            DomainName: !Sub "${LegalInfoApi}.execute-api.${AWS::Region}.amazonaws.com"
            CustomOriginConfig:
              HTTPPort: 443
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          TargetOriginId: ApiGateway
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
          ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
        CacheBehaviors:
          - PathPattern: "/api/articles"
            TargetOriginId: ApiGateway
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
          - PathPattern: "/api/law-firms"
            TargetOriginId: ApiGateway
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
          - PathPattern: "/api/settlements"
            TargetOriginId: ApiGateway
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
        Enabled: true
        PriceClass: PriceClass_100
        Comment: "Legal Injury Information Platform CDN"

  # S3 Bucket for static assets
  StaticAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "legal-platform-assets-${AWS::AccountId}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Project
          Value: LegalPlatform

  # CloudWatch Dashboard for monitoring
  MonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: LegalPlatform-Monitoring
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "properties": {
                "metrics": [
                  ["AWS/ApiGateway", "Count", "ApiName", "${LegalInfoApi}"],
                  [".", "4XXError", ".", "."],
                  [".", "5XXError", ".", "."]
                ],
                "period": 300,
                "stat": "Sum",
                "region": "${AWS::Region}",
                "title": "API Gateway Metrics"
              }
            },
            {
              "type": "metric",
              "properties": {
                "metrics": [
                  ["AWS/Lambda", "Duration", "FunctionName", "${LegalInfoAPI}"],
                  [".", "Errors", ".", "."],
                  [".", "Throttles", ".", "."]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "Lambda Performance"
              }
            },
            {
              "type": "metric",
              "properties": {
                "metrics": [
                  ["AWS/CloudFront", "Requests", "DistributionId", "${CloudFrontDistribution}"],
                  [".", "BytesDownloaded", ".", "."]
                ],
                "period": 300,
                "stat": "Sum",
                "region": "us-east-1",
                "title": "CloudFront Performance"
              }
            }
          ]
        }

  # CloudWatch Alarms for monitoring
  HighErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: LegalPlatform-HighErrorRate
      MetricName: 5XXError
      Namespace: AWS/ApiGateway
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 10
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref SNSTopic

  # SNS Topic for alerts
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: LegalPlatform-Alerts
      DisplayName: "Legal Platform Alerts"

  # Billing alarm
  BillingAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: LegalPlatform-MonthlyBilling
      MetricName: EstimatedCharges
      Namespace: AWS/Billing
      Statistic: Maximum
      Period: 86400
      EvaluationPeriods: 1
      Threshold: 100
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref SNSTopic

Parameters:
  OpenAIApiKey:
    Type: String
    NoEcho: true
    Description: "OpenAI API Key"
  HubSpotAccessToken:
    Type: String
    NoEcho: true
    Description: "HubSpot Access Token"
  HubSpotPortalId:
    Type: String
    Description: "HubSpot Portal ID"
  GoogleApiKey:
    Type: String
    NoEcho: true
    Description: "Google API Key"
  GoogleSpreadsheetId:
    Type: String
    Description: "Google Spreadsheet ID"

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${LegalInfoApi}.execute-api.${AWS::Region}.amazonaws.com/prod/"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
  
  CloudFrontUrl:
    Description: "CloudFront distribution URL"
    Value: !Sub "https://${CloudFrontDistribution.DomainName}/"
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontUrl"
  
  DashboardUrl:
    Description: "CloudWatch Dashboard URL"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=LegalPlatform-Monitoring"
    Export:
      Name: !Sub "${AWS::StackName}-DashboardUrl" 